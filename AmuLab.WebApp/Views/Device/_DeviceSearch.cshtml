@model AntData.TKV.Business.Models.DevicesModel
<style>
    .select2-container--default .select2-selection--single {
        height: 34px;
        border-radius: 0px;
    }
</style>
<div class="row">
    <div class="col-xs-12">
        <div class="box box-danger">
            <div class="box-header with-border">
                <h3 class="box-title">Tìm kiếm</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool " data-widget="collapse"><i class="fa fa-minus"></i></button>
                    @*<button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-remove"></i></button>*@
                </div>
            </div>
            <!-- /.box-header -->
            <div class="box-body">
                <div class="row">
                    @*@using (Html.BeginForm("DeviceList", "Device", FormMethod.Post))
                    {*@
                        @Html.AntiForgeryToken()
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Đơn vị</label>
                                <select class="form-control select2" id="optionFactory" style="width: 100%;" name="Search.FactoryId">
                                    
                                </select>
                                @Html.HiddenFor(m => m.Search.FactoryName, new { @class = "form-control", @id = "FactoryName" })
                            </div>
                            <div class="form-group">
                                <label>Tên thiết bị</label>
                                <select class="form-control select2" id="optionDeviceBase" data-placeholder="Chọn tên thiết bị" style="width: 100%;" name="Search.DeviceBaseId">
                                    @if (Model.Search.DeviceBaseId > 0)
                                    {
                                        <option value="@Model.Search.DeviceBaseId">@Model.Search.DeviceBaseName</option>
                                    }
                                </select>
                                @Html.HiddenFor(m => m.Search.DeviceBaseName, new { @class = "form-control", @id = "DeviceBaseName" })
                            </div>
                            <div class="form-group">
                                <label>Số quyết định điều động</label>
                                @Html.TextBoxFor(m => m.Search.NumberOfTransfer, new { @class = "form-control", @id = "numberOfTransfer" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Danh mục thiết bị</label>
                                <select class="form-control select2" id="optionDeviceCategory" data-placeholder="Chọn danh mục" style="width: 100%;" name="Search.DeviceCategoryId">
                                    @if (Model.Search.DeviceCategoryId.HasValue)
                                    {
                                        <option value="@Model.Search.DeviceCategoryId.Value" selected="selected">@Model.Search.DeviceCategoryName</option>
                                    }
                                </select>
                                @Html.HiddenFor(m => m.Search.DeviceCategoryName, new { @class = "form-control", @id = "DeviceCategoryName" })
                            </div>
                            <div class="form-group">
                                <label>Đơn vị tính</label>
                                <select class="form-control select2" id="optionUnit" data-placeholder="Chọn đơn vị tính" style="width: 100%;" name="Search.UnitId">
                                    @if (Model.Search.UnitId.HasValue)
                                    {
                                        <option value="@Model.Search.UnitId.Value" selected="selected">@Model.Search.UnitName</option>
                                    }
                                </select>
                                @Html.HiddenFor(m => m.Search.UnitName, new { @class = "form-control", @id = "UnitName" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Từ ngày - đến ngày</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    <input type="text" class="form-control pull-right" id="reservation" autocomplete="off">
                                    @Html.TextBoxFor(m => m.Search.DateRange, new { @class = "form-control", @type = "hidden", @id = "DateRange" })
                                    @Html.TextBoxFor(m => m.Search.StartDate, new { @class = "form-control", @type = "hidden", @id = "StartDate" })
                                    @Html.TextBoxFor(m => m.Search.EndDate, new { @class = "form-control", @type = "hidden", @id = "EndDate" })
                                </div>
                                <!-- /.input group -->
                            </div>
                            <div class="form-group">
                                <label>Năm đưa vào sử dụng</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.TextBoxFor(m => m.Search.YearToUse, new { @class = "form-control pull-right", @type = "text", @id = "inputYearToUse", @autocomplete = "off" })
                                    @Html.TextBoxFor(m => m.Search.YearToUse, new { @class = "form-control", @type = "hidden", @id = "yearToUse" })
                                    @Html.TextBoxFor(m => m.Search.YearToUseStr, new { @class = "form-control", @type = "hidden", @id = "yearToUseStr" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label>&nbsp;</label>
                                <div class="input-group" style="float:right; margin-top:25px;">
                                    <button type="submit" class="btn btn-primary" value="search" name="ButtonValue" onclick="resetPaing()">
                                        <i class="fa fa-search"></i> Tìm kiếm
                                    </button>
                                </div>
                            </div>
                        </div>
                        @Html.TextBoxFor(m => m.Search.PageNumber, new { @class = "form-control", @type = "hidden", @id = "PageNumber" })
                        @Html.TextBoxFor(m => m.Search.PageSize, new { @class = "form-control", @type = "hidden", @id = "PageSize" })
                    @*}*@
                </div>
                <!-- /.row -->
            </div>
            <!-- /.box-body -->
        </div>
    </div>
</div>

<script type="text/javascript">
    var factoryId = '@Model.Search.FactoryId';

    $(document).ready(function () {
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetCategoryDevice", "Device")",
            dataType: "json",
            data: {
                    Pattern: '',
                    Offset: 0,
                    Limit: 10000000
                },
            success: function(response) {
                $("#optionDeviceCategory").select2({
                    closeOnSelect: true,
                    data: response,
                    placeholder: 'Chọn danh mục'
                });
            }
        });

        @*$("#optionDeviceCategory").select2({
            minimumInputLength: 0,
            allowClear: true,
            multiple: false,
            ajax: {
                url: '@Url.Action("GetCategoryDevice", "Device")',
                dataType: 'json',
                type: "POST",
                data: function (params) {
                    return {
                        Pattern: params.term,
                        Offset: (params.page || 0) * 10,
                        Limit: 10
                    };
                },
                processResults: function (data, params) {
                    params.page = params.page || 0;
                    console.log(data);
                    return {
                        results: data,
                        pagination: {
                            more: data.length >= 10 * params.page
                        }
                    };
                }
            },
            placeholder: 'Chọn danh mục',
            escapeMarkup: function (markup) { return markup; },
            templateResult: function (results) {
                if (results) {
                    var rs = JSON.stringify(results);
                    var json = JSON.parse(rs);
                    return "<div title='" + json["text"] + "' id='" + json["id"] + "'>" + json["text"] + "</div>";
                }
                return "<div title='' id=''></div>";
            },
            templateSelection: function (results) {
                return "<div style='float:left;' id='" + results.id + "'>" + results.text + "</div>";
            }
        });*@

        $("#optionDeviceCategory").on('select2:select',
            function (e) {
                var data = e.params.data;
                $('#DeviceCategoryName').val(data.text);
            });

        $("#optionDeviceCategory").on('select2:unselect',
            function (e) {
                $('#DeviceCategoryName').val('');
            });

        $.ajax({
            type: "POST",
            url: "@Url.Action("GetFactory", "Device")",
            dataType: "json",
            data: {
                Pattern: '',
                Offset: 0,
                Limit: 10000000
            },
            success: function (response) {
                $("#optionFactory").select2({
                    closeOnSelect: true,
                    data: response,
                    placeholder: 'Chọn đơn vị'
                });
                $("#optionFactory").val('@Model.Search.FactoryId.GetValueOrDefault(0)').trigger('change');
            }
        });

        @*$("#optionFactory").select2({
            minimumInputLength: 0,
            allowClear: true,
            multiple: false,
            ajax: {
                url: '@Url.Action("GetFactory","Device")',
                dataType: 'json',
                type: "POST",
                data: function (params) {
                    return {
                        Pattern: params.term,
                        Offset: (params.page || 0) * 10,
                        Limit: 10
                    };
                },
                processResults: function (data, params) {
                    params.page = params.page || 0;
                    console.log(data);
                    return {
                        results: data,
                        pagination: {
                            more: data.length >= 10 * params.page
                        }
                    };
                }
            },
            placeholder: 'Chọn đơn vị',
            escapeMarkup: function (markup) { return markup; },
            templateResult: function (results) {
                if (results) {
                    var rs = JSON.stringify(results);
                    var json = JSON.parse(rs);
                    return "<div title='" + json["text"] + "' id='" + json["id"] + "'>" + json["text"] + "</div>";
                }
                return "<div title='' id=''></div>";
            },
            templateSelection: function (results) {
                return "<div style='float:left;' id='" + results.id + "'>" + results.text + "</div>";
            }
        });*@

        $("#optionFactory").on('select2:select',
            function(e) {
                var data = e.params.data;
                $('#FactoryName').val(data.text);
            });

        $("#optionFactory").on('select2:unselect',
            function(e) {
                $('#FactoryName').val('');
            });

        $('#inputYearToUse').datepicker({
            format: "yyyy",
            viewMode: "years",
            minViewMode: "years",
            autoclose: true
        }).on('changeDate', function (ev) {
            $("#yearToUseStr").val(ev.date.getFullYear());
            $("#yearToUse").val(ev.date);
        });

        $.ajax({
            type: "POST",
            url: "@Url.Action("GetUnit", "Device")",
            dataType: "json",
            data: {
                Pattern: '',
                Offset: 0,
                Limit: 10000000
            },
            success: function(response) {
                $("#optionUnit").select2({
                    closeOnSelect: true,
                    data: response,
                    placeholder: 'Chọn đơn vị tính'
                });
            }
        });

        @*$("#optionUnit").select2({
            minimumInputLength: 0,
            allowClear: true,
            multiple: false,
            ajax: {
                url: '@Url.Action("GetUnit","Device")',
                dataType: 'json',
                type: "POST",
                data: function (params) {
                    return {
                        Pattern: params.term,
                        Offset: (params.page || 0) * 10,
                        Limit: 10
                    };
                },
                processResults: function (data, params) {
                    params.page = params.page || 0;
                    console.log(data);
                    return {
                        results: data,
                        pagination: {
                            more: data.length >= 10 * params.page
                        }
                    };
                }
            },
            placeholder: 'Chọn đơn vị tính',
            escapeMarkup: function (markup) { return markup; },
            templateResult: function (results) {
                if (results) {
                    var rs = JSON.stringify(results);
                    var json = JSON.parse(rs);
                    return "<div title='" + json["text"] + "' id='" + json["id"] + "'>" + json["text"] + "</div>";
                }
                return "<div title='' id=''></div>";
            },
            templateSelection: function (results) {
                return "<div style='float:left;' id='" + results.id + "'>" + results.text + "</div>";
            }
        });*@

        $("#optionUnit").on('select2:select',
            function(e) {
                var data = e.params.data;
                $('#UnitName').val(data.text);
            });

        $("#optionUnit").on('select2:unselect',
            function(e) {
                $('#UnitName').val('');
            });

        @*$.ajax({
            type: "GET",
            url: "@Url.Action("GetDeviceName", "Device")",
            dataType: "json",
            data: {
                q: ''
            },
            success: function(response) {
                $("#optionDeviceBase").select2({
                    closeOnSelect: true,
                    data: response,
                    placeholder: 'Chọn tên thiết bị'
                });
            }
        });*@

        $("#optionDeviceBase").select2({
            minimumInputLength: 0,
            allowClear: true,
            multiple: false,
            ajax: {
                url: '@Url.Action("SearchDeviceBaseForSelect2","DeviceBase")',
                dataType: 'json',
                type: "GET",
                data: function (params) {
                    return {
                        q: params.term,
                        pageIndex: (params.page || 1),
                        pageSize: 10
                    };
                },
                processResults: function (data, params) {
                    params.page = params.page || 1;
                    return {
                        results: data.Data,
                        pagination: {
                            more: data.Data.length >= params.page * 10
                        }
                    };
                }
            },
            placeholder: 'Chọn tên thiết bị',
            //dropdownParent: $('#optionDeviceBase').parent(),
            escapeMarkup: function (markup) { return markup; },
            templateResult: function (results) {
                if (results) {
                    var rs = JSON.stringify(results);
                    var json = JSON.parse(rs);
                    return "<div title='" + json["text"] + "' id='" + json["id"] + "'>" + json["text"] + "</div>";
                }
                return "<div title='' id=''></div>";
            },
            templateSelection: function (results) {
                return "<div style='float:left;' id='" + results.id + "'>" + results.text + "</div>";
            }
        });

        $("#optionDeviceBase").on('select2:select',
            function (e) {
                var data = e.params.data;
                $('#DeviceBaseName').val(data.text);
            });

        $("#optionDeviceBase").on('select2:unselect',
            function (e) {
                $('#DeviceBaseName').val('');
            });
    });


    $(function () {
        $('#reservation').daterangepicker({
                locale: {
                    //format: 'DD/MM/YYYY'
                    cancelLabel: 'Clear'
                },
                autoUpdateInput: false,
            }
            ,function (start, end, label) {
                //$("#EndDate").val(end.format('YYYY-MM-DD'));
                //$("#StartDate").val(start.format('YYYY-MM-DD'));
                $("#DateRange").val(start.format('DD/MM/YYYY') + " - " + end.format("DD/MM/YYYY"));
            });

        $('#reservation').on('apply.daterangepicker', function (ev, picker) {
            $(this).val(picker.startDate.format('DD/MM/YYYY') + ' - ' + picker.endDate.format('DD/MM/YYYY'));
            $("#EndDate").val(picker.endDate.format('YYYY/MM/DD'));
            $("#StartDate").val(picker.startDate.format('YYYY/MM/DD'));
            $("#DateRange").val(picker.startDate.format('DD/MM/YYYY') + " - " + picker.endDate.format("DD/MM/YYYY"));
        });

        $('#reservation').on('cancel.daterangepicker', function(ev, picker) {
            //do something, like clearing an input
            $('#reservation').val('');
            $("#EndDate").val('');
            $("#StartDate").val('');
            $("#DateRange").val('');
        });


        $('#reservation').val($("#DateRange").val());
    });

    function resetPaing() {
        $('#PageNumber').val(1);
        return true;
    }
</script>    