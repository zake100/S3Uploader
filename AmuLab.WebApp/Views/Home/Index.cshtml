@{
    ViewBag.Title = "Upload To S3";
    var apiUrl = AmuLab.Core.Constants.Configuration.ApiUrl;
}
<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Upload to S3
        <small></small>
    </h1>
    @*<ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li class="active">Dashboard</li>
        </ol>*@
</section>

<!-- Main content -->
<section class="content">
    <div class="form-group">
        <input type="file" name="file" class="form-control" id="file" />
    </div>
    <button class="btn btn-success" id="uploadFile" type="button">Upload</button>
    <hr />
    <textarea id="suggest"></textarea>
</section>

@section scripts {
    <script src="~/Content/js/jquery.unobtrusive-ajax.js"></script>
    <script src="~/Content/plugin/ckeditor/ckeditor.js"></script>
    <script type="text/javascript">
        let editor;
        $('#uploadFile').on('click',
            function() {
                var fileUpload = $('#file').get(0);
                var files = fileUpload.files;
                // Create FormData object
                var fileData = new FormData();

                // Looping over all files and add it to FormData object
                for (var i = 0; i < files.length; i++) {
                    fileData.append(files[i].name, files[i]);
                }

                $.ajax({
                    url: '@($"{apiUrl}/api/file/upload")',
                    type: "POST",
                    contentType: false, // Not to set any content header
                    processData: false, // Not to process data
                    data: fileData,
                    success: function(result) {
                        alert("Success");
                    },
                    error: function(err) {
                        console.log(err)
                        alert(err.statusText);
                    }
                });
            });
        ClassicEditor
            .create(document.querySelector('#suggest'),
                {
                    mention: {
                        feeds: function (searchString) {
                            return getMatchingPlaceholders(searchString);
                        }
                    }
                })
            .then(newEditor => {
                editor = newEditor;
                console.log(newEditor);
            })
            .catch(error => {
                console.error(error);
            });

        function getMatchingPlaceholders(searchString) {
            console.log(searchString)
            return new Promise(resolve => {
                $.ajax({
                    url: '@($"{apiUrl}/api/file/getUser")',
                    type: "GET",
                    contentType: false, // Not to set any content header
                    processData: false, // Not to process data
                    data: {},
                    success: function(result) {
                        resolve(result);
                    },
                    error: function(err) {
                        console.log(err)
                        alert(err.statusText);
                    }
                });
            });
        }
    </script>
}