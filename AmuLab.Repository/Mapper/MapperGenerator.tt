<#@ include file="OrmLite.Core.ttinclude" #>

<#
	// Settings
	ConnectionStringName = "MainConnectionString";			// Uses last connection string in config if not specified
	Namespace = "AmuLab.Repository.Mapper";
	ClassPrefix = "";
	ClassSuffix = "";
	bool SplitIntoMultipleFiles = true;		// if true: Generates one file for every class
	bool MakeSingular = false;			// if true: Changes the classname to singular if tablename is not singular
	bool UseIdAsPK = false;				// if true: Changes the primary key property name to Id
	bool GenerateConstructor = false;		// if true: Generates the default empty constructor 

    // Read schema
	var tables = LoadTables(MakeSingular);


/*
	// Tweak Schema
	tables["tablename"].Ignore = true;							// To ignore a table
	tables["tablename"].ClassName = "newname";					// To change the class name of a table
	tables["tablename"]["columnname"].Ignore = true;			// To ignore a column
	tables["tablename"]["columnname"].PropertyName="newname";	// To change the property name of a column
	tables["tablename"]["columnname"].PropertyType="bool";		// To change the property type of a column
*/


	// Generate output
	if (tables.Count>0)
	{
#>
<#
if (string.IsNullOrEmpty(Namespace)) Namespace=ConnectionStringName;
if (string.IsNullOrEmpty(Namespace)) Namespace="OrmLitePoco";
var manager = Manager.Create(Host, GenerationEnvironment);
manager.StartHeader(); #>// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AmuLab.Core.Entities;
using DapperExtensions.Mapper;

namespace <#=Namespace #>
{
<#manager.EndBlock(); #>
<#
foreach(Table tbl in from t in tables where !t.Ignore select t)
{
if (tbl.Name.ToLower() == "sysdiagrams") continue;
manager.StartNewFile(TableName2ClassName(tbl.Name.Replace("Tbl", "")) + "Mapper.cs");
#>

    public partial class <#=TableName2ClassName(tbl.ClassName.Replace("Tbl", ""))#>Mapper : ClassMapper<<#=TableName2ClassName(tbl.ClassName.Replace("Tbl", ""))#>Entity>
    {

		public <#=TableName2ClassName(tbl.ClassName.Replace("Tbl", ""))#>Mapper()
		{
			base.Table("<#=tbl.Name#>");

<#
foreach(Column col in from c in tbl.Columns where !c.Ignore  select c)
{
	
	if (col.Name.ToLower() == "id") {
		if (col.IsAutoIncrement) { #> 
		    Map(f => f.Id).Key(KeyType.Identity);
<# } else {
			#> 
			Map(f => f.Id).Key(KeyType.Assigned);
<#
			   
        }
		continue;
    } 
	
#>
			Map(f => f.<#=TableName2ClassName(col.PropertyName)#>).Column("<#=col.Name#>");
<#
}
#>
		}


    }
<#  manager.EndBlock(); #>
<#  }   #>
<#manager.StartFooter(); #>
}
#pragma warning restore 1591
<#manager.EndBlock(); #>
<#manager.Process(SplitIntoMultipleFiles); #>
<#  }   #>